version: "3.4"

services:
  # Gogs
  gogs:
    image: gogs/gogs:latest
    #ports:
      #- "42022:22"
      #- "42030:3000"
    networks:
      - network_cluster       
    restart: always
    volumes:
      - nfs_gogs_data:/data
      #- $DockerVolume/docker/mount/development_service/gogs/conf/editorconfig:/app/gogs/.editorconfig
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.gogs.rule=Host(`gogs.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.gogs.entrypoints=websecure"
        - "traefik.http.routers.gogs.service=gogs"
        - "traefik.http.routers.gogs.middlewares=noauth-chain@file"
        - "traefik.http.services.gogs.loadbalancer.server.port=3000"
        - "traefik.tcp.routers.gogs_ssh.rule=HostSNI(`*`)"     
        - "traefik.tcp.routers.gogs_ssh.entrypoints=ssh"   
        - "traefik.tcp.routers.gogs_ssh.service=gogs_ssh"
        - "traefik.tcp.services.gogs_ssh.loadbalancer.server.port=22"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm 
          - node.labels.development == true

  # Gitea
  gitea:
    image: gitea/gitea:latest
    #ports:
      #- "42022:22"
      #- "42030:3000"
    networks:
      - network_cluster       
    restart: always
    volumes:
      - nfs_gitea:/data
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.gitea.rule=Host(`git.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.gitea.entrypoints=websecure"
        - "traefik.http.routers.gitea.service=gitea"
        - "traefik.http.routers.gitea.middlewares=noauth-chain@file"
        - "traefik.http.services.gitea.loadbalancer.server.port=3000"
        - "traefik.tcp.routers.gitea_ssh.rule=HostSNI(`*`)"     
        - "traefik.tcp.routers.gitea_ssh.entrypoints=ssh"   
        - "traefik.tcp.routers.gitea_ssh.service=gitea_ssh"
        - "traefik.tcp.services.gitea_ssh.loadbalancer.server.port=22"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm 
          - node.labels.development == true          

networks:
  network_cluster:
    external: true

x-common-keys-volume: &common-keys-volume
  type: nfs
  o: addr=${NFS_SERVER},rw,nfsvers=4

volumes:
 # NFS
  nfs_gogs_data: 
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/development/gogs/data
  nfs_gogs_conf: 
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/development/gogs/conf
  nfs_gitea: 
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/development/gitea/data      